name: DBT

on:
  push:
    paths:
      - dbt/**

defaults:
  run:
    working-directory: ./dbt

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
       - name: pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-dbt-${{ hashFiles('dbt/requirements.txt', 'dbt/requirements-dev.txt') }}

      - name: dbt deps cache
        uses: actions/cache@v3
        id: dbt_deps_cache
        with:
          path: dbt/dbt_packages
          key: dbt-${{ hashFiles('dbt/packages.yml') }}

      - name: pip install
        run: pip install -r requirements-dev.txt

      - name: dbt deps
        run: dbt deps
        if: ${{ steps.dbt_deps_cache.outputs.cache-hit != 'true' }}

      - name: dbt compile
        run: dbt compile

      - name: sqlfluff lint
        run: make lint

  # run only on main branch
  store-production-version:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the DBT project version
        id: dbt_project_version
        uses: mikefarah/yq@4-githubaction
        with:
          cmd: yq .version dbt_project.yml
      - name: Store as a text file
        run: |
          echo ${{ steps.dbt_project_version.outputs.stdout }} | xargs > dbt_project_version.txt
      - name: Upload to github artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dbt_project_version
          path: dbt_project_version.txt

  # run only on pull requests
  check-version-changed:
    if: "'pull_request' in github.event_name"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the DBT project version
        id: dbt_project_version
        uses: mikefarah/yq@4-githubaction
        with:
          cmd: yq .version dbt_project.yml
      - name: Download the production version
        uses: actions/download-artifact@v3
        with:
          name: dbt_project_version
      - name: Compare versions
        run: |
          echo "Production version: $(cat dbt_project_version.txt | xargs)"
          echo "Pull request version: ${{ steps.dbt_project_version.outputs.stdout | xargs }}"
          if [ "$(cat dbt_project_version.txt | xargs)" == "${{ steps.dbt_project_version.outputs.stdout | xargs}}" ]; then
            echo "Version has not changed"
            exit 1
          else
            echo "Version has changed"
          fi
